var COMMON = require('../../common/js/common.js');
var CONST = require('../../common/const.js');
var vm_index = avalon.define({
    $id : 'vm_index',
    cityList : [],
    baseInfo : {
        payRecord : true,
        dsAccount : false,
        fxAccount : false,
        fxUnion : false
    },
    urls : {
        getPayRecords : '/bill/getPayRecords',//查询支付流水记录
        getPayRecordsCount : '/bill/getPayRecordsCount',//支付流水概览
        exportPayRecords : '/export/exportPayRecords',//导出支付流水记录
        getSettleRecords : '/bill/getSettleRecords',//查询番茄代收记录
        getSettleRecordsCount : '/bill/getSettleRecordsCount',//番茄代收统计
        exportSettleRecords : '/export/exportSettleRecords',//导出代收记录
        getOrderStatements : '/bill/getOrderStatements',//分销详细账单
        getUnionStatements : '/bill/getUnionStatements',//分销对账总览
        regions : '/registe/regions',
        exportExcel : ''//导出excel
    },
    payDatas : {
        from : '',
        to : '',
        innId : '',
        innName : '',
        orderNo : '',
        productCode : '',
        payType : '',
        tradeNo : '',
        isBalance : '',
        searchType : 'innId',
        searchText : ''
    },
    dsDatas : {
        from : '',
        to : '',
        innId : '',
        innName : '',
        orderNo : '',
        productCode : '',
        payType : '',
        tradeNo : '',
        isBalance : '',
        searchType : 'innId',
        searchText : '',
        timeType : 'settleAt'
    },
    dsCount : {
        paidAmount : 0,
        poundageAmount : 0,
        totalAmount : 0,
        totalOrderNum : 0,
        unliqAmount : 0,
        unliqOrderNum : 0,
        unliqPaidAmount : 0,
        unliqPoundageAmount : 0
    },
    dsList : [],
    fxDatas : {
        from : '',
        to : '',
        unionId : ''
    },
    fxUnionDatas : {
        innId : '',
        innName : '',
        orderNo : '',
        searchType : 'innId',
        searchText : ''
    },
    payList : [],
    payCount : {
        orderNum : 0,
        getMoney : 0
    },
    fxCount : {
        unionNum : 0,
        orderCount : 0,
        orderPriceCount : 0,
        dxPriceCount : 0
    },
    fxUnionList : [],
    oneInnUnion : [],
    oneInnUnionCount : {},
    innFlag : {},
    payPage : 0,

    init : function () {
        var vm = vm_index
        vm.payDatas.from = tmsky.date.plusDate(COMMON.DATE.today(), -7, 'd', 'yyyy-MM-dd')
        vm.payDatas.to = COMMON.DATE.today()
        vm.dsDatas.from = tmsky.date.plusDate(COMMON.DATE.today(), -7, 'd', 'yyyy-MM-dd')
        vm.dsDatas.to = COMMON.DATE.today()
        vm.fxDatas.from = tmsky.date.plusDate(COMMON.DATE.today(), -7, 'd', 'yyyy-MM-dd')
        vm.fxDatas.to = COMMON.DATE.today()
        //支付流水
        $('#payFrom').datepicker({
            dateFormat : "yy-mm-dd"
        })
        $('#payTo').datepicker({
            dateFormat : "yy-mm-dd"
        })
        //    番茄代销对账
        $('#dsFrom').datepicker({
            dateFormat : "yy-mm-dd"
        })
        $('#dsTo').datepicker({
            dateFormat : "yy-mm-dd"
        })
        //    分销对账
        $('#fxFrom').datepicker({
            dateFormat : "yy-mm-dd"
        })
        $('#fxTo').datepicker({
            dateFormat : "yy-mm-dd"
        })

        //    分销对账(联盟客栈)
        $('#fxUnionFrom').datepicker({
            dateFormat : "yy-mm-dd"
        })
        $('#fxUnionTo').datepicker({
            dateFormat : "yy-mm-dd"
        })
    },
    changeTab : function (tab, time) {
        var map = {
            payRecord : false,
            dsAccount : false,
            fxAccount : false,
            fxUnion : false
        }
        for (var key in map) {
            if (key == tab) {
                map[key] = true;
                break;
            }
        }
        switch (tab) {
            case 'fxAccount':
                if (time == 1) {
                    vm_index.getCity();
                }
            default:
        }
        vm_index.baseInfo = map
    },
    checkType : function (x) {
        return COMMON.CONST.CHECKTYPE[x]
    },
    payType : function (x) {
        if (x == 1) {
            return '支付'
        } else if (x == 2) {
            return '全额退款'
        } else if (x == 3) {
            return '部分退款'
        }
    },
    isBalance : function (x) {
        if (x == -1) {
            return '无需结算'
        } else if (x == 0) {
            return '未平账'
        } else if (x == 1) {
            return '已平账'
        }
    },

    initPage : function (id, page, callback) {
        var list = [];
        tmsky.ui.page.render({
            id : id,
            callbackParams : list,
            callback : callback, // 或click : click
            pages : page.totalPages,
            pageNo : page.pageNo,
            skin : 'red',
            align : 'center',
            totalCount : page.totalCount
        })
    },
    //支付流水记录
    getPayRecordsCount : function (tab) {
        var vm = vm_index
        var searchType = vm.payDatas.searchType
        if (searchType == 'innId') {
            if (vm.payDatas.searchText != '') {
                if (!vm.checkIsNum(vm.payDatas.searchText)) {
                    alert('搜索客栈ID只能是数字！')
                    return
                }
            }
        }
        var data = {
            from : vm.payDatas.from,
            to : vm.payDatas.to,
            innId : vm.payDatas.innId,
            innName : vm.payDatas.innName,
            orderNo : vm.payDatas.orderNo,
            productCode : vm.payDatas.productCode,
            payType : vm.payDatas.payType,
            tradeNo : vm.payDatas.tradeNo,
            isBalance : vm.payDatas.isBalance
        }
        data[searchType] = vm.payDatas.searchText

        if (tab  == 'payTable') {
            window.open(CONST.DOMAIN.BILL + vm.urls.exportPayRecords + "?" + $.param(data, true), '_blank', 'top=10000');
        } else {
            $.post(CONST.DOMAIN.BILL + vm.urls.getPayRecordsCount, $.param(data, true)).done(function (rs) {
                if (rs.status == 200) {
                    if (rs.count.income == null || rs.count.payout == null) {
                        vm.payCount.orderNum = 0
                        vm.payCount.getMoney = 0
                        vm.getPayRecords(1)
                        return
                    }
                    vm.payCount.orderNum = rs.count.income.totalNum + rs.count.payout.totalNum
                    vm.payCount.getMoney = parseFloat(rs.count.income.totalAmount - rs.count.payout.totalAmount).toFixed(2)
                    vm.getPayRecords(1)
                }
            })
        }
    },
    getPayRecords : function (pageNo) {
        var vm = vm_index
        var searchType = vm.payDatas.searchType
        vm.payPage++
        var datas = {
            from : vm.payDatas.from,
            to : vm.payDatas.to,
            innId : vm.payDatas.innId,
            innName : vm.payDatas.innName,
            orderNo : vm.payDatas.orderNo,
            productCode : vm.payDatas.productCode,
            payType : vm.payDatas.payType,
            tradeNo : vm.payDatas.tradeNo,
            isBalance : vm.payDatas.isBalance,
            pageNo : pageNo
        }
        datas[searchType] = vm.payDatas.searchText
        vm.payList = []
        $.get(CONST.DOMAIN.BILL + vm.urls.getPayRecords, $.param(datas, true)).done(function (rs) {
            if (rs.status == 200) {
                vm.payList = rs.page.result
                vm.payList.forEach(function (el) {
                    el.payAt = tmsky.date.format(el.payAt, 'yyyy-MM-dd hh:mm:ss')
                })
                vm.initPage('payPage', rs.page, function () {
                    var pageInfo = tmsky.ui.page.getParams("payPage")
                    vm.getPayRecords(pageInfo.pageNo)
                });

            } else {
                alert(rs.message)
            }
        })
    },
    //    番茄代收记录
    getDsCount : function (tab) {
        var vm = vm_index
        var searchType = vm.dsDatas.searchType
        if (searchType == 'innId') {
            if (vm.dsDatas.searchText != '') {
                if (!vm.checkIsNum(vm.dsDatas.searchText)) {
                    alert('搜索客栈ID只能是数字！')
                    return
                }
            }

        }
        var datas = {
            from : vm.dsDatas.from,
            to : vm.dsDatas.to,
            innId : vm.dsDatas.innId,
            innName : vm.dsDatas.innName,
            orderNo : vm.dsDatas.orderNo,
            productCode : vm.dsDatas.productCode,
            isBalance : vm.dsDatas.isBalance,
            tradeNo : vm.dsDatas.tradeNo,
            timeType : vm.dsDatas.timeType
        }
        datas[searchType] = vm.dsDatas.searchText

        if (tab  == 'dsTable') {
            window.open(CONST.DOMAIN.BILL + vm.urls.exportSettleRecords + "?" + $.param(datas, true), '_blank', 'top=10000');
        } else {
            $.get(CONST.DOMAIN.BILL + vm.urls.getSettleRecordsCount, $.param(datas, true)).done(function (rs) {
                if (rs.status == 200) {
                    vm.dsCount = rs.count
                    vm.getSettleRecords(1)
                }
            })
        }
    },
    getSettleRecords : function (pageNo) {
        var vm = vm_index
        var searchType = vm.dsDatas.searchType
        var datas = {
            from : vm.dsDatas.from,
            to : vm.dsDatas.to,
            innId : vm.dsDatas.innId,
            innName : vm.dsDatas.innName,
            orderNo : vm.dsDatas.orderNo,
            productCode : vm.dsDatas.productCode,
            payType : vm.dsDatas.payType,
            tradeNo : vm.dsDatas.tradeNo,
            isBalance : vm.dsDatas.isBalance,
            pageNo : pageNo,
            timeType : vm.dsDatas.timeType
        }
        datas[searchType] = vm.dsDatas.searchText
        $.get(CONST.DOMAIN.BILL + vm.urls.getSettleRecords, $.param(datas, true)).done(function (rs) {
            if (rs.status == 200) {
                rs.page.result.forEach(function (el) {
                    if (el.payRecords.length > 0) {
                        el.noBalanceTotalPrice = 0
                        el.noBalanceNum = 0
                        el.hasBalanceTotalPrice = 0
                        el.hasBalanceNum = 0
                        el.payRecords.forEach(function (elem, i) {
                            el.pmsInnId = elem.pmsInnId


                            elem.thirdProcedure = (elem.payMode == 2 ? parseFloat(elem.payPrice * 0.003).toFixed(2) : parseFloat(elem.payPrice * 0.0055).toFixed(2))//第三方手续费
                            elem.orderPrice = elem.originalAmount + elem.deductPrice
                            // elem.poundage = parseFloat(elem.payPrice * elem.poundageRatio).toFixed(2)//手续费
                            // elem.setPrice = parseFloat(elem.payPrice - elem.payPrice * elem.poundageRatio).toFixed(2)//结算金额
                            if (elem.isBalance == 0) {
                                el.noBalanceTotalPrice = parseFloat(parseFloat(el.noBalanceTotalPrice) + parseFloat(elem.settlementPrice)).toFixed(2)
                                el.noBalanceNum = el.noBalanceNum + 1

                            } else if (elem.isBalance == 1) {
                                el.hasBalanceTotalPrice = parseFloat(parseFloat(el.hasBalanceTotalPrice) + parseFloat(elem.settlementPrice)).toFixed(2)
                                el.hasBalanceNum = el.hasBalanceNum + 1
                            }
                            //1、结算和未结算都存在
                            if (el.noBalanceNum > 0 && el.hasBalanceNum > 0) {
                                el.norowStatus = true
                                el.hasrowStatus = true
                            } else if (el.noBalanceNum > 0 && el.hasBalanceNum == 0) {
                                el.norowStatus = true
                                el.hasrowStatus = false
                            } else if (el.noBalanceNum == 0 && el.hasBalanceNum > 0) {
                                el.norowStatus = false
                                el.hasrowStatus = true
                            }

                        })
                    }
                })
                vm.dsList = rs.page.result
                vm.initPage('dsPage', rs.page, function () {
                    var pageInfo = tmsky.ui.page.getParams("dsPage")
                    vm.getSettleRecords(pageInfo.pageNo)
                });

            }
        })
    },
    toPayMode : function (x) {
        var pay = '';
        switch (x) {
            case '1':
                pay = '支付宝'
                break;
            case '2':
                pay = '财付通'
                break;
            case '3':
                pay = '银联'
                break;
            default:
        }
        return pay

    },
    cloceBalanceDialog : function () {
        $('#dsBalanceDialog').hide()
    },
    //当前要平账的客栈id
    curBalanceInnId : 0,
    curOrderNo : 0,

    openBalanceDialog : function (id, orderCode,length) {
        $('#dsBalanceDialog').show()
        vm_index.curBalanceInnId = id
        if(length>1){
            vm_index.curOrderNo=''
        }else{
            vm_index.curOrderNo = orderCode
        }
    },

    toBalance : function () {
        var vm = vm_index
        var datas = {
                from : vm.dsDatas.from,
                to : vm.dsDatas.to,
                innId : vm.curBalanceInnId,
                productCode : vm.dsDatas.productCode,
                tradeNo : vm.dsDatas.tradeNo,
                orderNo : vm.curOrderNo,
                timeType : vm.dsDatas.timeType
            },
            url = CONST.DOMAIN.BILL + '/bill/balanceOrders'
        $.get(url, $.param(datas, true)).done(function (rs) {
            if (rs.status == 200) {
                $('#dsBalanceDialog').hide()
                vm.getDsCount()
            } else {
                alert(rs.message)
            }
        })

    },
//    分销对账
    getFxCount : function (pageNo) {
        var vm = vm_index, _list = [], arr = []
        var data = {
            from : vm.fxDatas.from,
            to : vm.fxDatas.to,
            pageNo : pageNo
        }
        vm.fxUnionList = [];
        $.get(CONST.DOMAIN.BILL + vm.urls.getUnionStatements, $.param(data, true)).done(function (rs) {
            if (rs.status == 200) {
                vm.fxCount.unionNum = rs.page.result.length
                rs.page.result.forEach(function (x) {
                    _list.push(x)
                    vm.fxCount.orderCount = vm.fxCount.orderCount + x.orderNum
                    vm.fxCount.orderPriceCount = vm.fxCount.orderPriceCount + x.totalFee
                    if (x.commissionRatio == null) {
                        x.commissionRatio = 0
                    }
                    vm.fxCount.dxPriceCount = vm.fxCount.dxPriceCount + x.totalFee * x.commissionRatio
                })
                vm.fxUnionList = _list
                vm.initPage('fxPage', rs.page, function () {
                    var pageInfo = tmsky.ui.page.getParams("fxPage")
                    vm.getFxCount(pageInfo.pageNo)
                });
            } else {
                alert(rs.message)
            }
        })
    },
    getCity : function () {
        var vm = vm_index, arr = []
        $.get(CONST.DOMAIN.PMS + vm.urls.regions).done(function (rs) {
            if (rs.status == 200) {
                rs.regions.forEach(function (x) {
                    var item = {
                        id : x.id,
                        name : x.name
                    }
                    arr.push(item)
                })
                vm.cityList = arr
            }
        })
    },
    cityTransform : function (id) {
        var txt = ''
        vm_index.cityList.$model.forEach(function (x) {
            if (x.id == id) {
                txt = x.name
            }
        })
        return txt
    },
    getOrderStatements : function (pageNo, index) {
        var vm = vm_index
        if (index != null) {
            vm.oneInnUnionCount = vm.fxUnionList[index]
            vm.innFlag = vm.fxUnionList[index]
        }
        var searchType = vm.fxUnionDatas.searchType
        if (searchType == 'innId') {
            if (vm.fxUnionDatas.searchText != '') {
                if (!vm.checkIsNum(vm.fxUnionDatas.searchText)) {
                    alert('搜索客栈ID只能是数字！')
                    return
                }
            }

        }
        var datas = {
            from : vm.fxDatas.from,
            to : vm.fxDatas.to,
            pageSize : 10,
            unionId : vm.innFlag.id,
            innId : vm.fxUnionDatas.innId,
            innName : vm.fxUnionDatas.innName,
            orderNo : vm.fxUnionDatas.orderNo,
            pageNo : pageNo || 1
        }
        datas[searchType] = vm.fxUnionDatas.searchText
        vm.changeTab('fxUnion')
        $.get(CONST.DOMAIN.BILL + vm.urls.getOrderStatements, $.param(datas, true)).done(function (rs) {
            if (rs.status == 200) {

                rs.page.result.forEach(function (x) {
                    x.checkInAt = COMMON.DATE.format(x.checkInAt, 'yyyy-MM-dd')
                    x.checkOutAt = COMMON.DATE.format(x.checkOutAt, 'yyyy-MM-dd')
                    x.createdAt = COMMON.DATE.format(x.createdAt, 'yyyy-MM-dd hh:mm')

                })
                vm.oneInnUnion = rs.page.result
                vm.initPage('fxUnionPage', rs.page, function () {
                    var pageInfo = tmsky.ui.page.getParams("fxUnionPage")
                    vm.getOrderStatements(pageInfo.pageNo)
                });
            }

        })
    },
    excelTab : function (table) {
        COMMON.COMMONuTIL.exportToExcel(table);
    },
    checkIsNum : function (x) {
        var rule = /^[0-9]*[1-9][0-9]*$/
        if (rule.test(x)) {
            return true;
        } else {
            return false
        }
    },
    ajaxFx : function () {
        var vm = vm_index
        vm.getFxCount(1);
    }


})